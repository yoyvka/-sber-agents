#!/usr/bin/env python3
"""
CLI –±–æ—Ç –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å LLM —á–µ—Ä–µ–∑ OpenRouter.
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–∞, –º–µ—Ç—Ä–∏–∫–∞–º–∏ –∏ –∫—Ä–∞—Å–∏–≤—ã–º –≤—ã–≤–æ–¥–æ–º.
"""

import os
import sys
from typing import List, Dict, Optional
from dotenv import load_dotenv
from openai import OpenAI
from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich.markdown import Markdown
from rich import box


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Rich –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
console = Console()

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–æ–ª—å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
# –ó–ê–î–ê–ù–ò–ï: –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±–æ—Ç–∞
# –ù–∞–ø—Ä–∏–º–µ—Ä: "–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç..."
SYSTEM_PROMPT = """–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python.
–û–±—ä—è—Å–Ω—è–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.
–ù–µ –¥–∞–≤–∞–π –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π ‚Äî –ø–æ–º–æ–≥–∞–π —Å—Ç—É–¥–µ–Ω—Ç—É —Å–∞–º–æ–º—É –¥–æ–π—Ç–∏ –¥–æ –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ –Ω–∞–≤–æ–¥—è—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã.
–ü–æ–æ—â—Ä—è–π –ª—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –∫–æ–¥–æ–º.
–ë—É–¥—å —Ç–µ—Ä–ø–µ–ª–∏–≤ –∫ –æ—à–∏–±–∫–∞–º –Ω–æ–≤–∏—á–∫–æ–≤."""


class ChatBot:
    """–ü—Ä–æ—Å—Ç–æ–π CLI –±–æ—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å LLM."""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
        load_dotenv()
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        api_key = os.getenv("OPENROUTER_API_KEY")
        base_url = os.getenv("OPENROUTER_BASE_URL", "https://openrouter.ai/api/v1")
        self.model_name = os.getenv("MODEL_NAME", "openai/gpt-3.5-turbo")
        
        if not api_key:
            console.print("[red]‚ùå –û—à–∏–±–∫–∞: OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ![/red]")
            sys.exit(1)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenRouter
        self.client = OpenAI(
            api_key=api_key,
            base_url=base_url,
        )
        
        # –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ (—Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π)
        self.conversation_history: List[Dict[str, str]] = []
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –Ω–∞—á–∞–ª–æ, –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
        if SYSTEM_PROMPT:
            self.conversation_history.append({
                "role": "system",
                "content": SYSTEM_PROMPT
            })
        
        # –ú–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        self.session_metrics = {
            "total_prompt_tokens": 0,
            "total_completion_tokens": 0,
            "total_tokens": 0,
            "messages_count": 0,
        }
    
    def add_message(self, role: str, content: str):
        """–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞."""
        self.conversation_history.append({
            "role": role,
            "content": content
        })
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
        MAX_MESSAGES = 10
        if len(self.conversation_history) > MAX_MESSAGES + 1:  # +1 –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
            # –°—É–º–º–∞—Ä–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—Ä–µ–∑–∞–Ω–∏—è
            self.summarize_history()
    
    def clear_history(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞."""
        self.conversation_history = []
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–¥–∞–Ω
        if SYSTEM_PROMPT:
            self.conversation_history.append({
                "role": "system",
                "content": SYSTEM_PROMPT
            })
        console.print("[yellow]üìù –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞[/yellow]\n")

    def summarize_history(self):
        """–°—É–º–º–∞—Ä–∏–∑–æ–≤–∞—Ç—å –¥–ª–∏–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞."""
        if len(self.conversation_history) <= 3:  # –ù–µ —Å—É–º–º–∞—Ä–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –∏—Å—Ç–æ—Ä–∏—é
            return
        
        # –ù–∞—Ö–æ–¥–∏–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        system_prompt = next((msg for msg in self.conversation_history if msg["role"] == "system"), None)
        
        # –û—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        recent_messages = self.conversation_history[-2:]
        
        # –ë–µ—Ä–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ (–∏—Å–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
        messages_to_summarize = [
            msg for msg in self.conversation_history 
            if msg["role"] != "system" and msg not in recent_messages
        ]
        
        if not messages_to_summarize:
            return
            
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏
        summary_prompt = {
            "role": "user",
            "content": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏ –≤–∞–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:\n\n" + 
                      "\n".join([f"{msg['role']}: {msg['content']}" for msg in messages_to_summarize])
        }
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é
            with console.status("[bold yellow]ü§î –°—É–º–º–∞—Ä–∏–∑–∏—Ä—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞...", spinner="dots"):
                response = self.client.chat.completions.create(
                    model=self.model_name,
                    messages=[
                        {"role": "system", "content": "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –∫—Ä–∞—Ç–∫–∏—Ö –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑—é–º–µ –¥–∏–∞–ª–æ–≥–æ–≤. –°–æ–∑–¥–∞–≤–∞–π —á–µ—Ç–∫–∏–µ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∞–º–º–∞—Ä–∏."},
                        summary_prompt
                    ],
                )
            
            summary = response.choices[0].message.content
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∏—Å—Ç–æ—Ä–∏—é
            self.conversation_history = (
                ([system_prompt] if system_prompt else []) +  # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
                [{"role": "assistant", "content": f"üìù –†–µ–∑—é–º–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞:\n{summary}"}] +  # –†–µ–∑—é–º–µ
                recent_messages  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            )
            
            console.print("[green]‚úì –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —É—Å–ø–µ—à–Ω–æ —Å—É–º–º–∞—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–∞[/green]\n")
            
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}[/red]\n")
    
    def display_metrics(self, usage: Optional[dict], finish_reason: Optional[str] = None):
        """–û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞."""
        if not usage:
            return
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
        prompt_tokens = usage.get("prompt_tokens", 0)
        completion_tokens = usage.get("completion_tokens", 0)
        total_tokens = usage.get("total_tokens", 0)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        self.session_metrics["total_prompt_tokens"] += prompt_tokens
        self.session_metrics["total_completion_tokens"] += completion_tokens
        self.session_metrics["total_tokens"] += total_tokens
        self.session_metrics["messages_count"] += 1
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏ —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
        table = Table(title="üìä –ú–µ—Ç—Ä–∏–∫–∏ –æ—Ç–≤–µ—Ç–∞", box=box.ROUNDED, show_header=True)
        table.add_column("–ü–∞—Ä–∞–º–µ—Ç—Ä", style="cyan")
        table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green")
        
        table.add_row("–ú–æ–¥–µ–ª—å", self.model_name)
        table.add_row("Prompt —Ç–æ–∫–µ–Ω—ã", str(prompt_tokens))
        table.add_row("Completion —Ç–æ–∫–µ–Ω—ã", str(completion_tokens))
        table.add_row("–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω—ã", str(total_tokens))
        
        if finish_reason:
            table.add_row("Finish reason", finish_reason)
        
        console.print(table)
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏ —Å–µ—Å—Å–∏–∏
        session_table = Table(title="üéØ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏", box=box.ROUNDED)
        session_table.add_column("–ü–∞—Ä–∞–º–µ—Ç—Ä", style="cyan")
        session_table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="magenta")
        
        session_table.add_row("–°–æ–æ–±—â–µ–Ω–∏–π", str(self.session_metrics["messages_count"]))
        session_table.add_row("–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤", str(self.session_metrics["total_tokens"]))
        
        console.print(session_table)
        console.print()
    
    def display_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Å—Å–∏–∏."""
        console.print("\n[bold cyan]üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏:[/bold cyan]")
        
        stats_table = Table(box=box.DOUBLE)
        stats_table.add_column("–ú–µ—Ç—Ä–∏–∫–∞", style="cyan", no_wrap=True)
        stats_table.add_column("–ó–Ω–∞—á–µ–Ω–∏–µ", style="green")
        
        stats_table.add_row("–ú–æ–¥–µ–ª—å", self.model_name)
        stats_table.add_row("–°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏", str(self.session_metrics["messages_count"]))
        stats_table.add_row("–°–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏", str(len(self.conversation_history)))
        stats_table.add_row("Prompt —Ç–æ–∫–µ–Ω—ã", str(self.session_metrics["total_prompt_tokens"]))
        stats_table.add_row("Completion —Ç–æ–∫–µ–Ω—ã", str(self.session_metrics["total_completion_tokens"]))
        stats_table.add_row("–í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω—ã", str(self.session_metrics["total_tokens"]))
        
        console.print(stats_table)
        console.print()
    
    def send_message(self, user_message: str) -> Optional[str]:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ LLM –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç."""
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        self.add_message("user", user_message)
        
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            with console.status("[bold green]ü§î –î—É–º–∞—é...", spinner="dots"):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –¥–∏–∞–ª–æ–≥–∞
                response = self.client.chat.completions.create(
                    model=self.model_name,
                    messages=self.conversation_history,
                )
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç
            assistant_message = response.choices[0].message.content
            finish_reason = response.choices[0].finish_reason
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
            self.add_message("assistant", assistant_message)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç
            console.print(Panel(
                Markdown(assistant_message),
                title="ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç",
                border_style="blue",
                padding=(1, 2)
            ))
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏
            self.display_metrics(response.usage.model_dump() if response.usage else None, finish_reason)
            
            return assistant_message
            
        except Exception as e:
            console.print(f"[red]‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ LLM: {e}[/red]\n")
            # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏, —Ç–∞–∫ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è
            if self.conversation_history and self.conversation_history[-1]["role"] == "user":
                self.conversation_history.pop()
            return None
    
    def show_welcome(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        welcome_text = """
# ü§ñ CLI LLM –ë–æ—Ç

–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å LLM —á–µ—Ä–µ–∑ OpenRouter API.

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
- `/exit` - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
- `/clear` - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
- `/stats` - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–µ—Å—Å–∏–∏
- `/help` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –≤–æ–ø—Ä–æ—Å–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!
        """
        console.print(Panel(
            Markdown(welcome_text),
            title="üìñ –°–ø—Ä–∞–≤–∫–∞",
            border_style="green",
            padding=(1, 2)
        ))
        
        if not SYSTEM_PROMPT:
            console.print("[yellow]‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–µ –∑–∞–¥–∞–Ω. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ SYSTEM_PROMPT –≤ src/bot.py[/yellow]\n")
        else:
            console.print("[green]‚úì –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∞–∫—Ç–∏–≤–µ–Ω[/green]\n")
    
    def run(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞ (REPL)."""
        self.show_welcome()
        
        try:
            while True:
                # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try:
                    user_input = console.input("[bold cyan]üë§ –í—ã:[/bold cyan] ").strip()
                except EOFError:
                    break
                
                if not user_input:
                    continue
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                if user_input.startswith("/"):
                    command = user_input.lower()
                    
                    if command == "/exit":
                        console.print("[yellow]üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è![/yellow]")
                        break
                    
                    elif command == "/clear":
                        self.clear_history()
                        continue
                    
                    elif command == "/stats":
                        self.display_stats()
                        continue
                    
                    elif command == "/help":
                        self.show_welcome()
                        continue
                    
                    else:
                        console.print(f"[red]‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {user_input}[/red]")
                        console.print("[yellow]–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏[/yellow]\n")
                        continue
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                console.print(Panel(
                    user_input,
                    title="üë§ –í—ã",
                    border_style="cyan",
                    padding=(1, 2)
                ))
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
                self.send_message(user_input)
        
        except KeyboardInterrupt:
            console.print("\n[yellow]üëã –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è![/yellow]")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if self.session_metrics["messages_count"] > 0:
            console.print("\n[bold green]üìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–∏:[/bold green]")
            self.display_stats()


def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É."""
    bot = ChatBot()
    bot.run()


if __name__ == "__main__":
    main()

